{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/about.js"],"names":["Seo","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","data","allMarkdownRemark","edges","node","html","className","to","dangerouslySetInnerHTML","__html"],"mappings":"uKAYA,SAASA,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,GAASC,QAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,gBAAC,IAAD,CACEM,eAAgB,CACdR,QAEFE,MAAOA,EACPO,cAAeF,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASN,IAEXS,OAAOb,KAKfH,EAAIiB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,qFCnDA,UA/Bc,SAAC,GAAc,IACrBY,EADoB,EAAXK,KACMC,kBAAkBC,MAAM,GAAGC,KAAKC,KAErD,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKlB,MAAM,UACX,uBAAKmB,UAAU,cACb,gBAAC,KAAD,CAAMA,UAAU,YAAYC,GAAG,KAAK,KACpC,uBAAKD,UAAU,gBACb,gBAAC,KAAD,CAAMC,GAAG,OAAT,MAAwB,2BACxB,gBAAC,KAAD,CAAMA,GAAG,OAAT,MAAwB,2BACxB,gBAAC,KAAD,CAAMA,GAAG,OAAT,MAAwB,4BAE1B,uBAAKD,UAAU,UAAUE,wBAAyB,CAAEC,OAAQb","file":"component---src-pages-about-js-4ab59915a4b6d5a6e344.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n\nconst About = ({ data }) => {\n  const content = data.allMarkdownRemark.edges[0].node.html;\n\n  return (\n    <Layout>\n      <Seo title=\"About\" />\n      <div className=\"about-page\">\n        <Link className=\"back-link\" to=\"/\">{'<'}</Link>\n        <div className=\"locale-links\">\n          <Link to=\"#de\">de</Link><br />\n          <Link to=\"#en\">en</Link><br />\n          <Link to=\"#fr\">fr</Link><br />\n        </div>\n        <div className=\"content\" dangerouslySetInnerHTML={{ __html: content }}></div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query AboutQuery {\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/(about.md)/\" }}) {\n      edges {\n        node {\n          html\n        }\n      }\n    }\n  }\n`\n\nexport default About\n"],"sourceRoot":""}